"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
"""
from typing import Dict, List

class ReportGenerator:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤"""

    @staticmethod
    def print_document_validation(document_errors: List[str]):
        """–í—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        if document_errors:
            print("\nüèóÔ∏è  –û–®–ò–ë–ö–ò –°–¢–†–£–ö–¢–£–†–´ –î–û–ö–£–ú–ï–ù–¢–ê:")
            for error in document_errors:
                print(f"  ‚ùå {error}")
        else:
            print("\n‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")

    @staticmethod
    def print_progress(paragraph_num: int, classified_class: str, errors_count: int):
        """–í—ã–≤–æ–¥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞"""
        print(f"\n–ê–±–∑–∞—Ü {paragraph_num}: –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è...")
        print(f"–û–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–ª–∞—Å—Å: {classified_class}")
        print(f"–ê–±–∑–∞—Ü {paragraph_num}: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        print(f"–ê–±–∑–∞—Ü {paragraph_num}: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è...")

        if errors_count > 0:
            print(f"‚úó –ù–∞–π–¥–µ–Ω–æ {errors_count} –æ—à–∏–±–æ–∫")
        else:
            print("‚úì –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    @staticmethod
    def print_paragraph_errors(formatting_errors: List[str], content_errors: List[str]):
        """–í—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –¥–ª—è –∞–±–∑–∞—Ü–∞"""
        for error in formatting_errors:
            print(f"  üìê –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {error}")
        for error in content_errors:
            print(f"  üìù –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {error}")

    @staticmethod
    def print_final_report(results: Dict):
        """–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞–Ω–∞–ª–∏–∑–∞"""
        print("\n" + "=" * 70)
        print("–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –û –ü–†–û–í–ï–†–ö–ï –î–û–ö–£–ú–ï–ù–¢–ê")
        print("=" * 70)

        summary = results["summary"]

        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        ReportGenerator._print_summary_stats(summary)

        # –û—à–∏–±–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        if results.get("document_errors"):
            ReportGenerator._print_document_errors(results["document_errors"])

        # –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã
        ReportGenerator._print_found_classes(summary, results["paragraphs"])

        # –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ—à–∏–±–æ–∫
        ReportGenerator._print_detailed_errors(results["paragraphs"])

        # –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
        ReportGenerator._print_compliance_analysis(summary)

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        ReportGenerator._print_recommendations(summary)

        print("\n" + "=" * 70)

    @staticmethod
    def _print_summary_stats(summary: Dict):
        """–í—ã–≤–æ–¥ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        print(f"\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∞–±–∑–∞—Ü–µ–≤: {summary['total_paragraphs']}")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: {summary['total_errors']}")
        print(f"  ‚Ä¢ –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {summary['formatting_errors']}")
        print(f"  ‚Ä¢ –û—à–∏–±–∫–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è: {summary['content_errors']}")
        print(f"  ‚Ä¢ –û—à–∏–±–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞: {summary.get('document_errors', 0)}")

    @staticmethod
    def _print_document_errors(document_errors: List[str]):
        """–í—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        print(f"\nüèóÔ∏è  –û–®–ò–ë–ö–ò –°–¢–†–£–ö–¢–£–†–´ –î–û–ö–£–ú–ï–ù–¢–ê:")
        for error in document_errors:
            print(f"  ‚ùå {error}")

    @staticmethod
    def _print_found_classes(summary: Dict, paragraphs: list):
        """–í—ã–≤–æ–¥ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤"""
        print(f"\nüè∑Ô∏è  –ù–ê–ô–î–ï–ù–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ –°–¢–ê–¢–¨–ò:")

        class_translations = {
            '—É–¥–∫': '–£–î–ö',
            '–∞–≤—Ç–æ—Ä': '–ê–≤—Ç–æ—Ä',
            '–∑–∞–≥–æ–ª–æ–≤–æ–∫': '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏',
            '—Å–≤–µ–¥–µ–Ω–∏—è_–æ–±_–∞–≤—Ç–æ—Ä–µ': '–°–≤–µ–¥–µ–Ω–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ',
            '–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è': '–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è',
            '–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞': '–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞',
            '–∑–∞–≥–æ–ª–æ–≤–æ–∫_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π': '–ó–∞–≥–æ–ª–æ–≤–æ–∫ (–∞–Ω–≥–ª.)',
            '–∞–≤—Ç–æ—Ä_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π': '–ê–≤—Ç–æ—Ä (–∞–Ω–≥–ª.)',
            '–º–µ—Å—Ç–æ_—Ä–∞–±–æ—Ç—ã_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π': '–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã (–∞–Ω–≥–ª.)',
            '–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è_–∞–Ω–≥–ª–∏–π—Å–∫–∞—è': '–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è (–∞–Ω–≥–ª.)',
            '–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞_–∞–Ω–≥–ª–∏–π—Å–∫–∏–µ': '–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–∞–Ω–≥–ª.)',
            '–æ—Å–Ω–æ–≤–Ω–æ–π_—Ç–µ–∫—Å—Ç': '–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç'
        }

        for class_name in sorted(summary['classes_found']):
            count = sum(1 for p in paragraphs if p["classified_as"] == class_name)
            translated_name = class_translations.get(class_name, class_name)
            print(f"  ‚Ä¢ {translated_name}: {count} —ç–ª–µ–º–µ–Ω—Ç(–æ–≤)")

    @staticmethod
    def _print_detailed_errors(paragraphs: list):
        """–í—ã–≤–æ–¥ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫"""
        print(f"\nüîç –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø –û–®–ò–ë–û–ö:")

        error_paragraphs = [p for p in paragraphs if p["total_errors"] > 0]

        if not error_paragraphs:
            print("  ‚úÖ –û—à–∏–±–æ–∫ –≤ –∞–±–∑–∞—Ü–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        else:
            for para in error_paragraphs:
                print(f"\n  üìÑ –ê–±–∑–∞—Ü {para['index']} ({para['classified_as']}):")
                print(f"     –¢–µ–∫—Å—Ç: {para['text_preview']}")

                for error in para['formatting_errors']:
                    print(f"     ‚ùå –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {error}")

                for error in para['content_errors']:
                    print(f"     ‚ùå –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {error}")

    @staticmethod
    def _print_compliance_analysis(summary: Dict):
        """–ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º"""
        print(f"\nüìã –ê–ù–ê–õ–ò–ó –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –¢–†–ï–ë–û–í–ê–ù–ò–Ø–ú:")

        required_elements = [
            '—É–¥–∫', '–∞–≤—Ç–æ—Ä', '–∑–∞–≥–æ–ª–æ–≤–æ–∫', '—Å–≤–µ–¥–µ–Ω–∏—è_–æ–±_–∞–≤—Ç–æ—Ä–µ',
            '–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è', '–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞', '–∑–∞–≥–æ–ª–æ–≤–æ–∫_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π',
            '–∞–≤—Ç–æ—Ä_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', '–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è_–∞–Ω–≥–ª–∏–π—Å–∫–∞—è', '–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞_–∞–Ω–≥–ª–∏–π—Å–∫–∏–µ'
        ]

        found_elements = summary['classes_found']
        missing_elements = [elem for elem in required_elements if elem not in found_elements]

        if missing_elements:
            print("  ‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:")
            element_names = {
                '—É–¥–∫': '–£–î–ö',
                '–∞–≤—Ç–æ—Ä': '–ê–≤—Ç–æ—Ä',
                '–∑–∞–≥–æ–ª–æ–≤–æ–∫': '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏',
                '—Å–≤–µ–¥–µ–Ω–∏—è_–æ–±_–∞–≤—Ç–æ—Ä–µ': '–°–≤–µ–¥–µ–Ω–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ',
                '–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è': '–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è',
                '–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞': '–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞',
                '–∑–∞–≥–æ–ª–æ–≤–æ–∫_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π': '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º',
                '–∞–≤—Ç–æ—Ä_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π': '–ê–≤—Ç–æ—Ä –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º',
                '–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è_–∞–Ω–≥–ª–∏–π—Å–∫–∞—è': '–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º',
                '–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞_–∞–Ω–≥–ª–∏–π—Å–∫–∏–µ': '–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º'
            }
            for elem in missing_elements:
                print(f"    ‚Ä¢ {element_names.get(elem, elem)}")
        else:
            print("  ‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")

    @staticmethod
    def _print_recommendations(summary: Dict):
        """–í—ã–≤–æ–¥ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")

        total_errors = summary['total_errors'] + summary.get('document_errors', 0)

        if total_errors == 0:
            print("  üéâ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.")
        else:
            if summary.get('document_errors', 0) > 0:
                print("  üìÑ –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: –ø–æ–ª—è, –æ–±—ä–µ–º, –æ–±—â–µ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.")

            if summary['formatting_errors'] > summary['content_errors']:
                print("  üìê –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —à—Ä–∏—Ñ—Ç Times New Roman –¥–ª—è –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–º–µ—Ä—ã —à—Ä–∏—Ñ—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É–∂–∏—Ä–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞ –∏ –∫—É—Ä—Å–∏–≤–∞")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—Ç—É–ø—ã –∞–±–∑–∞—Ü–µ–≤ (0.6 —Å–º –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞)")
            else:
                print("  üìù –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏:")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ø–æ–ª–Ω–æ—Ç—É –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤")
                print("    - –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –§–ò–û –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–ª–∏–Ω—É –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ (300-650 —Å–∏–º–≤–æ–ª–æ–≤)")
                print("    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ (4-6 —Å–ª–æ–≤)")

            print("  üìö –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ Times New Roman –¥–ª—è –≤—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            print("    - –°–æ–±–ª—é–¥–∞–π—Ç–µ –º–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª 1.0")
            print("    - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö")
            print("    - –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —á–∞—Å—Ç–∏")

